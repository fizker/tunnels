# ================================
# Build image
# ================================
FROM swift:5.9-jammy as compiler

# Make sure all system packages are up to date.
RUN export DEBIAN_FRONTEND=noninteractive DEBCONF_NONINTERACTIVE_SEEN=true \
	&& apt-get -q update \
	&& apt-get -q dist-upgrade -y \
	&& rm -rf /var/lib/apt/lists/*

# Set up a build area
WORKDIR /build

# Copy entire repo into container
COPY . .

# Build everything, with optimizations and test discovery
RUN --mount=type=cache,target=/code/.build \
	swift build \
	--enable-test-discovery \
	--product tunnel-server \
	--configuration release


# Copy main executable to staging area

RUN mkdir /staging

RUN --mount=type=cache,target=/code/.build \
	cp .build/release/tunnel-server /staging/


# ================================
# Run image
# ================================
FROM swift:5.9-jammy-slim as runner

# Make sure all system packages are up to date.
RUN export DEBIAN_FRONTEND=noninteractive DEBCONF_NONINTERACTIVE_SEEN=true \
	&& apt-get -q update \
	&& apt-get -q dist-upgrade -y \
	&& rm -rf /var/lib/apt/lists/*

# Switch to the new home directory
WORKDIR /app

# Copy built executable and any staged resources from builder
COPY --from=compiler /staging /app

ENV PORT=80

ENTRYPOINT ["./tunnel-server"]
CMD ["serve", "--env", "production", "--hostname", "0.0.0.0"]
